<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.vain.mapper.UserMapper">

    <sql id="Base_Column_List">
       id,type,userName,password,salt,nickname,phone,email,avatar,sex,birthday,state,deleted,createTime,modifyTime
    </sql>

    <sql id="Normal_Column_List">
        id,type,userName,nickname,phone,email,avatar,sex,birthday,state,deleted,createTimecreateTime,modifyTime
    </sql>

    <insert id="insert" parameterType="com.vain.entity.User" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO t_user
    (type,userName,password,salt,nickname,phone,email,avatar,sex,birthday,state,deleted,createtime,modifyTime)
    VALUES
    (#{type},#{userName},#{password},#{salt},#{nickname},#{phone},#{email},#{avatar},#{sex},#{birthday},#{state},#{deleted},now(),now())
    </insert>

    <resultMap id="BaseMap" type="com.vain.entity.User">
        <id property="id" column="id"/>
        <result property="type" column="type"/>
        <result property="userName" column="userName"/>
        <result property="nickname" column="nickname"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="avatar" column="avatar"/>
        <result property="sex" column="sex"/>
        <result property="birthday" column="birthday"/>
        <result property="state" column="state"/>
        <result property="deleted" column="deleted"/>
        <result property="createTime" column="createTime"/>
        <collection property="roles" ofType="com.vain.entity.Role">
            <id property="id" column="roleId"/>
            <result property="name" column="roleName"/>
        </collection>
    </resultMap>

    <!--登录-->
    <select id="get" resultType="com.vain.entity.User"
            parameterType="com.vain.entity.User">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_user
        <where>
            <if test="id !=null">
                AND id = #{id}
            </if>
            <if test="userName !=null and userName != ''">
                AND userName = #{userName}
            </if>
            <if test="phone !=null and phone != ''">
                AND phone = #{phone}
            </if>
            <if test="email !=null and email != ''">
                AND email = #{email}
            </if>
            AND deleted=0
        </where>
    </select>

    <select id="getList" resultMap="BaseMap"
            parameterType="com.vain.entity.User">
        SELECT
        t_user.*,
        t_role.name AS roleName,
        t_role.id AS roleId
        FROM t_user
        LEFT JOIN t_user_role ON t_user.id = t_user_role.userId
        LEFT JOIN t_role ON t_role.id = t_user_role.roleId
        WHERE t_user.deleted = 0 AND t_user.type != 1
        <if test="type != null and type != 0">
            AND t_user.type = #{type}
        </if>
        <if test="userName != null and userName != ''">
            AND t_user.userName LIKE '%${userName}%'
        </if>

        ORDER BY t_user.createTime
    </select>


    <update id="update" parameterType="com.vain.entity.User">
        UPDATE t_user
        <set>
            <if test="userName != null and userName !=''">
                userName =#{userName},
            </if>
            <if test="nickname != null and nickname !=''">
                nickname=#{nickname},
            </if>
            <if test="password != null and password != ''">
                password=#{password},
            </if>
            <if test="salt != null and salt != ''">
                salt=#{salt},
            </if>
            <if test="state != null and state !=-1">
                state=#{state},
            </if>
            <if test="phone != null and phone !=''">
                phone=#{phone},
            </if>
            <if test="email != null and email !=''">
                email=#{email},
            </if>
            <if test="avatar != null and avatar != ''">
                avatar = #{avatar},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="birthday != null and birthday != ''">
                birthday = #{birthday},
            </if>
            <if test="state != null and state != ''">
                state = #{state},
            </if>
            <if test="type != null and type !=''">
                type = #{type},
            </if>
            modifyTime=now()
        </set>
        <where>
            id=#{id}
        </where>
    </update>

    <update id="delete" parameterType="com.vain.entity.User">
        UPDATE t_user
        <set>
            <if test="deleted!=null">
                deleted = #{deleted},
            </if>
            modifyTime=now()
        </set>
        <where>
            <choose>
                <when test="ids != null">
                    id IN
                    <foreach collection="ids" item="id" separator="," open="(" close=")">
                        #{id}
                    </foreach>
                </when>
                <otherwise>
                    id=#{id}
                </otherwise>
            </choose>
        </where>
    </update>

    <update id="resetPwd" parameterType="com.vain.entity.User">
        UPDATE t_user
        <set>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="salt != null and salt != ''">
                salt = #{salt},
            </if>
            modifyTime=now()
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <!--锁定用户-->
    <update id="lock" parameterType="com.vain.entity.User">
        UPDATE t_user SET state =#{state},modifyTime = now()
        <where>
            <choose>
                <when test="ids != null">
                    id IN
                    <foreach collection="ids" item="id" separator="," open="(" close=")">
                        #{id}
                    </foreach>
                </when>
                <otherwise>
                    id=#{id}
                </otherwise>
            </choose>
        </where>
    </update>

    <select id="getById" parameterType="java.lang.Integer" resultType="com.vain.entity.User">
        SELECT  * FROM t_user WHERE id = #{id}
    </select>

</mapper>